{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalPrice: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: newItem.price,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n        state.totalPrice = state.totalPrice + newItem.price;\n      } else {\n        existingItem.quantity++; //existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n\n        state.totalPrice = state.totalPrice + +newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload; // ?????\n\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalPrice = state.totalPrice - existingItem.price;\n      } else {\n        existingItem.quantity--;\n        state.totalPrice = state.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/sanazdehghan/Documents/Udemy-react/Ch11/code/12-finished/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalPrice","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","title","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZC,IAAAA,UAAU,EAAE;AAHA,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAI,CAACQ,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;AACfD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADG;AAEfE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFA;AAGfC,UAAAA,QAAQ,EAAER,OAAO,CAACO,KAHH;AAIfZ,UAAAA,UAAU,EAAEK,OAAO,CAACO,KAJL;AAKfhB,UAAAA,IAAI,EAAES,OAAO,CAACS;AALC,SAAjB;AAOAX,QAAAA,KAAK,CAACH,UAAN,GAAmBG,KAAK,CAACH,UAAN,GAAmBK,OAAO,CAACO,KAA9C;AACD,OATD,MASO;AACLL,QAAAA,YAAY,CAACM,QAAb,GADK,CAEL;;AACAV,QAAAA,KAAK,CAACH,UAAN,GAAoBG,KAAK,CAACH,UAAN,GAAmB,CAAEK,OAAO,CAACO,KAAjD;AACD;AACF,KAnBO;;AAoBRG,IAAAA,kBAAkB,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB,CADgC,CACJ;;AAC5B,YAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAIQ,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;AAC/BV,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYkB,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACAP,QAAAA,KAAK,CAACH,UAAN,GAAoBG,KAAK,CAACH,UAAN,GAAoBO,YAAY,CAACK,KAArD;AACD,OAHD,MAGO;AACLL,QAAAA,YAAY,CAACM,QAAb;AACAV,QAAAA,KAAK,CAACH,UAAN,GAAoBG,KAAK,CAACH,UAAN,GAAmBO,YAAY,CAACK,KAApD;AACD;AACF;;AA/BO;AAPkB,CAAD,CAA7B;AA0CA,OAAO,MAAMK,WAAW,GAAGtB,SAAS,CAACuB,OAA9B;AAEP,eAAevB,SAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalPrice: 0,\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: newItem.price,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n        state.totalPrice = state.totalPrice + newItem.price;\n      } else {\n        existingItem.quantity++;\n        //existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n        state.totalPrice =  state.totalPrice + + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;  // ?????\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalPrice =  state.totalPrice  - existingItem.price;\n      } else {\n        existingItem.quantity--;\n        state.totalPrice =  state.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}